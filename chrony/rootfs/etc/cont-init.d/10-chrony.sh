#!/command/with-contenv bashio
set -Eeuo pipefail

CONF="/etc/chrony/chrony.conf"
DATA_DIR="/data/chrony"

mkdir -p "$DATA_DIR"
chown chrony:chrony "$DATA_DIR" 2>/dev/null || true
chmod 0700 "$DATA_DIR" || true

MODE="$(bashio::config 'mode')"
ALLOW="$(bashio::config 'allow')"
USE_NTS="$(bashio::config 'use_nts')"
SET_SYSCLK="$(bashio::config 'set_system_clock')"
LOCAL_FALLBACK="$(bashio::config 'local_fallback')"

mapfile -t SERVERS < <(bashio::config 'ntp_server[]' 2>/dev/null || true)
POOL="$(bashio::config 'ntp_pool' 2>/dev/null || true)"

sanitize_host() {
  local raw="$1" trimmed stripped
  trimmed="$(echo "$raw" | xargs)"

  # [IPv6]:port or [IPv6]
  if [[ "$trimmed" =~ ^\[[0-9A-Fa-f:]+\](:[0-9]+)?$ ]]; then
    stripped="${trimmed#[}"
    stripped="${stripped%%]*}"
    echo "$stripped"
    return
  fi

  # hostname:port or IPv4:port (single colon; exclude IPv6 which has multiple colons)
  if [[ "$trimmed" =~ ^[^:]+:[0-9]+$ ]] && [[ "$trimmed" != *:*:* ]]; then
    echo "${trimmed%%:*}"
    return
  fi

  # Fallback: first token, then strip unsafe chars
  echo "$trimmed" | awk '{print $1}' | sed 's/[^A-Za-z0-9.:\[\]-]//g'
}

is_plausible_host() {
  local h="$1"
  [[ "$h" =~ ^([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+$ ]] && return 0
  if [[ "$h" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
    IFS='.' read -r o1 o2 o3 o4 <<< "$h"
    [[ $o1 -le 255 && $o2 -le 255 && $o3 -le 255 && $o4 -le 255 ]] && return 0
  fi
  [[ "$h" =~ ^[0-9A-Fa-f:]+$ ]] && [[ "$h" == *:* ]] && return 0
  return 1
}

parse_allow_into_lines() {
  local raw="$1"
  echo "$raw" | tr ',' ' ' | xargs -n1
}

if [[ -z "${ALLOW// }" ]]; then
  ALLOW="192.168.0.0/16 10.0.0.0/8 fd00::/8"
  bashio::log.info "No 'allow' provided; defaulting to common LAN subnets."
fi

if [[ "$MODE" == "server" && ${#SERVERS[@]} -eq 0 ]]; then
  bashio::log.warning "mode=server but 'ntp_server' is empty; only local_fallback (if enabled) will serve."
fi

if bashio::var.true "$USE_NTS"; then
  if ! chronyd -v 2>/dev/null | grep -q 'NTS'; then
    if ! chronyd --version 2>/dev/null | grep -q 'NTS'; then
      bashio::log.warning "Chrony binary may lack NTS support; 'use_nts' might not take effect."
    fi
  fi
fi

{
  echo "# Generated by HA Chrony add-on at $(date -u +%FT%TZ)"
  echo "driftfile $DATA_DIR/chrony.drift"
  echo "makestep 1.0 3"
  echo "rtcsync"

  if bashio::var.true "$USE_NTS"; then
    echo "ntsdumpdir $DATA_DIR"
  fi

  while read -r net; do
    [[ -n "$net" ]] && echo "allow $net"
  done < <(parse_allow_into_lines "$ALLOW")

  if [[ "$MODE" == "server" ]]; then
    for raw in "${SERVERS[@]}"; do
      h="$(sanitize_host "$raw")"
      if is_plausible_host "$h"; then
        echo -n "server $h iburst"
        if bashio::var.true "$USE_NTS"; then echo " nts"; else echo; fi
      else
        bashio::log.warning "Skipping invalid server entry: $raw"
      fi
    done
  else
    h="$(sanitize_host "$POOL")"
    if [[ -n "$h" ]] && is_plausible_host "$h"; then
      echo -n "pool $h iburst"
      if bashio::var.true "$USE_NTS"; then echo " nts"; else echo; fi
    else
      bashio::log.warning "Invalid ntp_pool '$POOL'; falling back to 'pool.ntp.org'"
      echo "pool pool.ntp.org iburst"
    fi
  fi

  if bashio::var.true "$LOCAL_FALLBACK"; then
    echo "local stratum 10"
  fi

  if bashio::config.has_value 'extra_config'; then
    echo
    echo "# --- extra_config (verbatim) ---"
    bashio::config 'extra_config'
  fi
} > "$CONF"

if bashio::var.true "$USE_NTS"; then
  bashio::log.info "NTS client enabled. Outbound TCP/4460 and UDP/123 must be allowed."
else
  bashio::log.info "NTS disabled; using plain NTP upstream."
fi

if bashio::var.false "$SET_SYSCLK"; then
  bashio::log.info "Host clock steering disabled (chronyd -x)."
fi
